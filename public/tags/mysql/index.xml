<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySql on Software Engineer and Product Manager</title>
    <link>https://indraoctama.com/tags/mysql/</link>
    <description>Recent content in MySql on Software Engineer and Product Manager</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 27 Jul 2019 17:51:33 +0700</lastBuildDate>
    
	<atom:link href="https://indraoctama.com/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang Docker Image Resize</title>
      <link>https://indraoctama.com/golang-docker-image-resize-20190727/</link>
      <pubDate>Sat, 27 Jul 2019 17:51:33 +0700</pubDate>
      
      <guid>https://indraoctama.com/golang-docker-image-resize-20190727/</guid>
      <description>Golang dan docker adalah paduan yang ciamik ketika kita membuat aplikasi microservice yang berjalan di server / cloud. Mengingat kembali artikel ini Docker For Dummy. Lalu muncul pertanyaan, mengapa file aplikasi yang hanya 8-an MB dikonversi ke docker menjadi 900-an MB?
REPOSITORY TAG IMAGE ID CREATED SIZE dockerinaja latest 78de7207aa5a 3 minutes ago 952MB golang 1.11.1 45e48f60e268 2 minutes ago 777MB  Tentu saja ini berpengaruh pada saat melakukan docker push, docker pull, dan menghabiskan banyak space di harddisk.</description>
    </item>
    
    <item>
      <title>Docker for Dummy With Golang &amp; MySQL</title>
      <link>https://indraoctama.com/docker-for-dummy-with-golang-mysql-20181213/</link>
      <pubDate>Thu, 13 Dec 2018 13:38:33 +0700</pubDate>
      
      <guid>https://indraoctama.com/docker-for-dummy-with-golang-mysql-20181213/</guid>
      <description>Say Hi&amp;hellip; Halo teman-teman, lama belom nulis karena sedang ada beberapa kesibukan dan harus belajar yang bener sebelum nulis hehe. Pada kesempatan ini, saya akan membagikan pengalaman saya mengenai bagaiamana mengoperasikan docker secara sederhana melalui contoh aplikasi Golang. Tentunya artikel ini bukan artikel yang ditujukan kepada mastah-mastah yang sudah malang melintang di dunia devops. Saya menulis artikel ini dalam perspektif supaya saya yang seorang developer sedikit tahu apa yang dilakukan teman-teman devops supaya ketika bekerjasama nantinya akan mendapatkan hasil yang efektif.</description>
    </item>
    
    <item>
      <title>Golang for Beginner Part 1.2: Print Data as JSON API</title>
      <link>https://indraoctama.com/golang-for-beginner-part-1.2-print-data-as-json-api-20180609/</link>
      <pubDate>Sat, 09 Jun 2018 23:43:00 +0700</pubDate>
      
      <guid>https://indraoctama.com/golang-for-beginner-part-1.2-print-data-as-json-api-20180609/</guid>
      <description>Hari ini kita akan belajar mengenai print data DB MySQL ke dalam bentuk web JSON API. Anda bisa fork full codenya disini : Full Code
Mengingat kembali postingan sebelumnya mengenai print data row dari mysql yakni Print Data From DB MySQL. Kita akan sedikit memodifikasi fungsi-fungsi sebelumnya yakni dengan menambahkan komponen-komponen seperti :
 Gorilla Mux &amp;ndash;&amp;gt; library 3rd party digunakan untuk routing web &amp;ldquo;json/encoding&amp;rdquo; &amp;ndash;&amp;gt; library go untuk mengakomodasi fungsi-fungsi membaca dan menulis data ke dalam bentuk JSON &amp;ldquo;net/http&amp;rdquo; &amp;ndash;&amp;gt; library go untuk keperluan fungsi http seperti GET, POST, PUT, dsb.</description>
    </item>
    
    <item>
      <title>Golang for Beginner Part 1: Print Data From DB MySQL</title>
      <link>https://indraoctama.com/golang-for-beginner-part-1-print-data-from-db-mysql-20180607/</link>
      <pubDate>Thu, 07 Jun 2018 21:13:35 +0700</pubDate>
      
      <guid>https://indraoctama.com/golang-for-beginner-part-1-print-data-from-db-mysql-20180607/</guid>
      <description>Hari ini kita akan belajar bagaimana menulis data row yang ada di database mysql dengan cara koding dengan bahasa Go. Pertama-tama silahkan unduh dump mysql disini :
goforbeginner.sql
Buatlah database bernama &amp;ldquo;goforbeginner&amp;rdquo;, lalu import file goforbeginner.sql tersebut ke db &amp;ldquo;goforbeginner&amp;rdquo; tersebut. Jika sudah maka strukturnya akan seperti ini : Kita akan fokuskan kepada table products dengan data yang sudah tersedia sebagai berikut : Mari kita buat dulu structure code nya sebagai berikut :</description>
    </item>
    
  </channel>
</rss>